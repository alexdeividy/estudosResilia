-- AULA 16 --

-- BD PIZZARIA --

CREATE OR REPLACE VIEW CONSULTA AS SELECT TB_CLIENTE.NOME, COUNT(TB_PEDIDO.ID_PEDIDO) FROM TB_PEDIDO
INNER JOIN TB_CLIENTE ON TB_PEDIDO.ID_CLIENTE = TB_CLIENTE.ID_CLIENTE
GROUP BY TB_CLIENTE.NOME
ORDER BY COUNT(TB_PEDIDO.ID_PEDIDO) DESC

SELECT * FROM CONSULTA

-- BD RESILIA --
CREATE TABLE ESCOLA(
ID INTEGER PRIMARY KEY,
NOME VARCHAR(100));

CREATE TABLE ALUNO(
ID INTEGER PRIMARY KEY,
NOME VARCHAR(255),
EMAIL VARCHAR(255),
ID_ESCOLA INTEGER,
FOREIGN KEY (ID_ESCOLA) REFERENCES ESCOLA(ID)
);

CREATE TABLE ALUNO_AUDITORIA(
ID_ALUNO INT,
DATA_INSERT TIMESTAMP
);

-- CRIAR A FUNÇÃO QUE IRÁ INSERIR OS DADOS NA TABELA ALUNO_AUDITORIA --

CREATE OR REPLACE FUNCTION ALUNO_LOG_FUNC()
RETURNS TRIGGER
LANGUAGE PLPGSQL
AS $$
BEGIN

-- ADICIONO AS LINHAS QUE SERÃO EXEXCUTADAS --

INSERT INTO ALUNO_AUDITORIA(ID_ALUNO, DATA_INSERT) VALUES (new.id, current_timestamp);

RETURN NEW;
END;
$$

CREATE TRIGGER LOG_TRIGGER
AFTER INSERT ON ALUNO
FOR EACH ROW
EXECUTE PROCEDURE ALUNO_LOG_FUNC();

INSERT INTO ESCOLA VALUES(1, 'RESILIA') -- INSERE VALOR NA TABELA ESCOLA --
SELECT * FROM ESCOLA -- SELECIONA TUDO DA TABELA ESCOLA --

INSERT INTO ALUNO VALUES(1, 'RAFAEL', 'RAFAEL@RAFAEL.RAFAEL.RF', 1)
SELECT * FROM ALUNO

SELECT * FROM ALUNO_AUDITORIA;
INSERT INTO ALUNO VALUES((SELECT MAX(ID)+1 FROM ALUNO), 'CESAR', 'TESTE', 1)

